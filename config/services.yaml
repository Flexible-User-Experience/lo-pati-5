imports:
    - { resource: 'services/sonata_admins.yaml' }
    - { resource: 'services/sonata_blocks.yaml' }

parameters:
    default_locale:             '%env(string:DEFAULT_LOCALE)%'
    google_maps_api_key:        '%env(string:GOOGLE_MAPS_API_KEY)%'
    project_title:              '%env(string:PROJECT_TITLE)%'
    developer_name:             '%env(string:DEVELOPER_NAME)%'
    developer_delivery_address: '%env(string:DEV_DELIVERY_ADDRESS)%'
    developer_url:              '%env(string:DEVELOPER_URL)%'
    send_grid_api_key:          '%env(string:SEND_GRID_API_KEY)%'
    customer_name:              '%env(string:CUSTOMER_NAME)%'
    customer_email:             '%env(string:CUSTOMER_EMAIL)%'
    customer_url:               '%env(string:CUSTOMER_URL)%'
    email_address_test_1:       '%env(string:EMAIL_ADDRESS_TEST_1)%'
    email_address_test_2:       '%env(string:EMAIL_ADDRESS_TEST_2)%'
    email_address_test_3:       '%env(string:EMAIL_ADDRESS_TEST_3)%'
    id_page_irradiador:         '%env(int:ID_PAGE_IRRADIADOR)%'
    locale_i18n:                [ 'es' ]
    locale_i18n_full:           [ 'ca', 'es' ]

services:
    _defaults:
        autowire:      true
        autoconfigure: true
        bind:
            $sendGridApiKey:    '%send_grid_api_key%'
            $customerName:      '%project_title%'
            $customerEmail:     '%customer_email%'
            $emailAddressTest1: '%email_address_test_1%'
            $emailAddressTest2: '%email_address_test_2%'
            $emailAddressTest3: '%email_address_test_3%'
            $idPageIrradiador:  '%id_page_irradiador%'
            $locale:            '%default_locale%'
            $locales:           '%locale_i18n_full%'
    App\:
        resource: '../src/'
        exclude:
            - '../src/DependencyInjection/'
            - '../src/Entity/'
            - '../src/Kernel.php'
            - '../src/Tests/'
    # menus
    app.frontend_main_menu:
        class:   Knp\Menu\MenuItem
        factory: [ '@App\Menu\Frontend\MenuBuilder', createMainMenu ]
        tags:
            - { name: knp_menu.menu, alias: 'frontend_main' }
    app.frontend_language_menu:
        class:   Knp\Menu\MenuItem
        factory: [ '@App\Menu\Frontend\LanguageBuilder', createLanguageMenu ]
        tags:
            - { name: knp_menu.menu, alias: 'frontend_language' }
    app.backend_top_rigth_nav_menu:
        class: Knp\Menu\MenuItem
        factory: [ '@app.backend_top_rigth_nav_menu_builder', createRigthTopNavMenu ]
        tags:
            - { name: knp_menu.menu, alias: backend_top_rigth_nav_menu }
    app.backend_top_rigth_nav_menu_builder:
        class: App\Menu\Backend\TopRigthNavMenuBuilder
        arguments:
            - '@knp_menu.factory'
            - '@security.helper'
    # event listeners
    app.user_success_login_event_listener:
        class: App\Event\Listener\UserSuccessLoginEventListener
        arguments:
            - '@doctrine.orm.entity_manager'
        tags:
            - { name: kernel.event_listener, event: app.user_success_login_event, method: onUserSuccessLogin, priority: 1 }
    app.doctrine_user_event:
        class: App\Event\Listener\DoctrineUserEventListener
        arguments:
            - '@security.user_password_hasher'
        tags:
            - { name: doctrine.orm.entity_listener, event: prePersist, entity: App\Entity\User, priority: 2 }
            - { name: doctrine.orm.entity_listener, event: preUpdate,  entity: App\Entity\User, priority: 2 }
    App\Form\EventListener\DefaultTranslationsListener:
        arguments:
            - '@App\Form\Translation\GedmoTranslationForm'
    App\Form\EventListener\GedmoTranslationsListener:
        arguments:
            - '@App\Form\Translation\GedmoTranslationForm'
    App\Form\Translation\DefaultTranslationForm:
        arguments:
            - '@form.registry'
            - '@Doctrine\Common\Persistence\ManagerRegistry'
    App\Form\Translation\GedmoTranslationForm:
        arguments:
            - '@form.registry'
            - '@Doctrine\Common\Persistence\ManagerRegistry'
        calls:
            - setGedmoTranslatableListener: [ '@stof_doctrine_extensions.listener.translatable' ]
    # forms
    App\Form\Type\GedmoTranslationsType:
        arguments:
            - '@App\Form\EventListener\GedmoTranslationsListener'
            - '@App\Form\Translation\GedmoTranslationForm'
            - '%locale_i18n%'
            - ~
        tags:
            - { name: 'form.type' }
    App\Form\Type\TranslationsFormsType:
        arguments:
            - '%locale_i18n%'
            - ~
        tags:
            - { name: 'form.type' }
