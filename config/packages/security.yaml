security:
    enable_authenticator_manager: true
    role_hierarchy:
        ROLE_SONATA_ADMIN:
            - ROLE_USER
            - ROLE_ADMIN_MENU_LEVEL1_ALL
            - ROLE_ADMIN_MENU_LEVEL2_ALL
            - ROLE_ADMIN_SLIDESHOW_PAGE_ALL
            - ROLE_ADMIN_PAGE_ALL
            - ROLE_ADMIN_PAGE_IMAGE_ALL
            - ROLE_ADMIN_NEWSLETTER_ALL
            - ROLE_ADMIN_NEWSLETTER_GROUP_ALL
            - ROLE_ADMIN_NEWSLETTER_POST_ALL
            - ROLE_ADMIN_NEWSLETTER_USER_ALL
            - ROLE_ADMIN_ARTIST_ALL
            - ROLE_ADMIN_ARCHIVE_ALL
            - ROLE_ADMIN_VISITING_HOURS_ALL
            - ROLE_ADMIN_CONFIG_FOOTER_INFORMATION_ALL
            - ROLE_ADMIN_CONFIG_CALENDAR_WORKING_DAY_ALL
        ROLE_SONATA_SUPER_ADMIN:
            - ROLE_SONATA_ADMIN
            - ROLE_ADMIN_USER_ALL
        ROLE_ADMIN:
            - ROLE_SONATA_ADMIN
        ROLE_SUPER_ADMIN:
            - ROLE_ADMIN
            - ROLE_SONATA_SUPER_ADMIN
            - ROLE_ALLOWED_TO_SWITCH
    password_hashers:
        App\Entity\User:
            algorithm: auto
    providers:
        users:
            id: App\Security\UserProvider
    firewalls:
        dev:
            pattern:  ^/(_(profiler|wdt)|css|images|js)/
            security: false
        admin:
            pattern:     /admin(.*)
            lazy:        true
            entry_point: App\Security\AdminLoginAuthenticator
            logout:
                path:   admin_app_logout
                target: admin_app_login
            custom_authenticators:
                - App\Security\AdminLoginAuthenticator
        main:
            lazy: true
    access_control:
        - { path: ^/admin/login$, roles: PUBLIC_ACCESS }
        - { path: ^/admin/logout$, roles: PUBLIC_ACCESS }
        - { path: ^/admin/, roles: ROLE_ADMIN }
        - { path: ^/.*, roles: PUBLIC_ACCESS }

when@test:
    security:
        firewalls:
            admin:
                http_basic: ~
